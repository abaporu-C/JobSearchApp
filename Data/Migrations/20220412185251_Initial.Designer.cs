// <auto-generated />
using System;
using JobSearchApp.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobSearchApp.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220412185251_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.4");

            modelBuilder.Entity("JobSearchApp.Models.Application", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("ApplicationDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Employer")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("HasApplied")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("HasInterviewed")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("HireDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Hired")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("InterviewDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("URL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("Applications");
                });

            modelBuilder.Entity("JobSearchApp.Models.DocumentType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("DocumentTypes");
                });

            modelBuilder.Entity("JobSearchApp.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("JoinedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("JobSearchApp.Models.Utils.FileContent", b =>
                {
                    b.Property<int>("FileContentID")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("BLOB");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("FileContentID");

                    b.ToTable("FileContent");
                });

            modelBuilder.Entity("JobSearchApp.Models.Utils.UploadedFile", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("UploadedFile");

                    b.HasDiscriminator<string>("Discriminator").HasValue("UploadedFile");
                });

            modelBuilder.Entity("JobSearchApp.Models.Document", b =>
                {
                    b.HasBaseType("JobSearchApp.Models.Utils.UploadedFile");

                    b.Property<int>("ApplicationID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DocumentTypeID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasIndex("ApplicationID");

                    b.HasIndex("DocumentTypeID");

                    b.HasDiscriminator().HasValue("Document");
                });

            modelBuilder.Entity("JobSearchApp.Models.Application", b =>
                {
                    b.HasOne("JobSearchApp.Models.User", null)
                        .WithMany("Applications")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("JobSearchApp.Models.Utils.FileContent", b =>
                {
                    b.HasOne("JobSearchApp.Models.Utils.UploadedFile", "UploadedFile")
                        .WithOne("FileContent")
                        .HasForeignKey("JobSearchApp.Models.Utils.FileContent", "FileContentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UploadedFile");
                });

            modelBuilder.Entity("JobSearchApp.Models.Document", b =>
                {
                    b.HasOne("JobSearchApp.Models.Application", "Application")
                        .WithMany("Documents")
                        .HasForeignKey("ApplicationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("JobSearchApp.Models.DocumentType", "DocumentType")
                        .WithMany()
                        .HasForeignKey("DocumentTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Application");

                    b.Navigation("DocumentType");
                });

            modelBuilder.Entity("JobSearchApp.Models.Application", b =>
                {
                    b.Navigation("Documents");
                });

            modelBuilder.Entity("JobSearchApp.Models.User", b =>
                {
                    b.Navigation("Applications");
                });

            modelBuilder.Entity("JobSearchApp.Models.Utils.UploadedFile", b =>
                {
                    b.Navigation("FileContent")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
